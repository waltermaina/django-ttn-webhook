from django.db import models
from django.core.validators import MaxValueValidator, MinValueValidator
import datetime


class EnvironmentData(models.Model):
    """
        A model for the data generated by the RAK1906
        environment sensor.
    """

    # Record ID to be made of record's year, month, day and hour
    record_id = models.PositiveIntegerField(
        default=0,
        validators=[
            MaxValueValidator(2147483647),
            MinValueValidator(0)
        ],unique=True,primary_key=True
    )

    # The time when the record was created as a date
    time_recorded = models.DateTimeField(default=datetime.datetime.now)

    # Temperature value
    temperature = models.FloatField(
        default=0.0,
        validators=[
            MaxValueValidator(100.0),
            MinValueValidator(0.0)
        ]
    )

    # Atmospheric pressure value
    pressure = models.FloatField(
        default=0.0,
        validators=[
            MaxValueValidator(2000.0),
            MinValueValidator(0.0)
        ]
    )

    # Humidity value
    humidity = models.FloatField(
        default=0,
        validators=[
            MaxValueValidator(100.0),
            MinValueValidator(0.0)
        ]
    )

    # Gas resistance in ohms
    # ToDo convert to IAQ Index
    gas_resistance = models.FloatField(
        default=0,
        validators=[
            MaxValueValidator(100000.0),
            MinValueValidator(0.0)
        ]
    )
    

    class Meta:
        db_table = 'environment_data'

    def __str__(self):
        """A string representation of the model."""
        return f"Record ID {self.record_id}"
